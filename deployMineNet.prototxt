name: "CaffeNet"
input: "data"

input_dim: 1
input_dim: 1
input_dim: 256
input_dim: 256

layer
{
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  
  # following convolution_param defines convolutional layer
  # the convolutional layer produces 20 convolutional outputs. 
  # 20 filters with 5 x 5 size are randomly initialized using xavier algo
  # stride is 1
  convolution_param
  {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer
{
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  # following pooling_param defines a maxpooling layer
  # with stride 2 and size 2 x 2
  pooling_param
  {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer
{
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  # following convolution_param defines a convolutional layer 
  # with 50 convolutional kernels of 5 x 5 size.
  # initialized with xavier algo
  convolution_param
  {
    num_output: 50
    kernel_size: 5
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer
{
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  # following pooling_param defines a second maxpooling layer 
  # with stride 2 and size 2 x 2
  pooling_param
  {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer
{
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  # following convolution_param defines a convolutional layer 
  # with 50 convolutional kernels of 4 x 4 size.
  # initialized with xavier algo
  convolution_param
  {
    num_output: 50
    kernel_size: 4
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer
{
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  # following pooling_param defines a second maxpooling layer 
  # with stride 2 and size 2 x 2
  pooling_param
  {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer
{
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "ip1"
  
  inner_product_param
  {
    num_output: 1000
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer
{
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}



layer
{
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param
  {
    num_output: 100
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer
{
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}

layer
{
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  inner_product_param
  {
    num_output: 1
    weight_filler
    {
      type: "xavier"
    }
  }
}

layer {
  name: "prob"
  type: "Softmax"
  bottom: "ip3"
  top: "prob"
}